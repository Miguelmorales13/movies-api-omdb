{"version":3,"sources":["utils/http.util.ts","http/Omdb.http.ts","components/MovieItem.tsx","pages/HomePage.tsx","pages/SeriesPage.tsx","components/MovieDetails.tsx","pages/MoviePage.tsx","pages/EpisodesPage.tsx","routes/routes.ts","routes/SubRoute.tsx","components/FooterApp.tsx","App.tsx","reportWebVitals.ts","components/Theme.tsx","index.tsx"],"names":["Http","axios","create","baseURL","interceptors","request","use","url","includes","response","data","error","Promise","reject","EnumMovieType","genType","type","genPage","page","OmdbHttp","search","a","get","movies","id","instance","useStyles","makeStyles","theme","root","display","minHeight","spacing","cursor","details","flexDirection","width","content","flex","cover","controls","alignItems","paddingLeft","paddingBottom","playIcon","height","MovieItem","movie","classes","useTheme","isLg","useMediaQuery","breakpoints","up","history","useHistory","Box","p","mt","Card","className","onClick","push","imdbID","CardContent","Typography","component","variant","Title","color","Year","CardMedia","image","Poster","title","textInput","palette","primary","main","backgroundColor","contrastText","HomePage","props","useState","setMovie","setSearch","omdbHttp","getInstance","handleMovies","getMoviesBySearch","Search","useEffect","Grid","container","item","xs","TextField","fullWidth","value","onChange","e","target","label","map","sm","md","lg","SeriesPage","series","subContainerInfo","imgPoster","objectFit","containerImg","justifyContent","alignContent","containerInfo","padding","MovieDetails","src","alt","align","imdbRating","Rating","name","max","parseInt","readOnly","Language","Actors","BoxOffice","Released","Production","Plot","MoviePage","params","useParams","handleMovie","getMoviesById","movieWanted","console","log","Paper","path","exact","SubRoute","route","render","routes","footer","position","bottom","left","FooterApp","margin","bar","itemLink","textDecoration","active","App","Container","NavLink","activeClassName","to","noWrap","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Theme","children","createMuiTheme","light","dark","secondary","ThemeProvider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4f74bf60.chunk.js","sourcesContent":["import axios, {AxiosError, AxiosRequestConfig, AxiosResponse} from \"axios\";\n\nconst KEY = '19de8e43'\nconst Http = axios.create({\n    baseURL: 'http://www.omdbapi.com/'\n})\n\nconst requestInterceptor = (request: AxiosRequestConfig): AxiosRequestConfig => {\n    request.url = `${request.url}${request.url?.includes('?') ? '&' : '?'}apikey=${KEY}`\n    return request\n}\n\nconst responseInterceptor = (response: AxiosResponse): AxiosResponse => {\n    return response.data ?? response\n}\nconst errorInterceptor = (error: AxiosError): Promise<AxiosError> => {\n    return Promise.reject(error)\n}\n\nHttp.interceptors.request.use(requestInterceptor)\nHttp.interceptors.response.use(responseInterceptor, errorInterceptor)\n\n\nexport default Http\n","import Http from \"../utils/http.util\";\nimport {MoviesSearched} from \"../models/MovieSearched\";\n\nexport enum EnumMovieType {\n    movie = 'movie',\n    series = 'series',\n    episode = 'episode'\n}\n\nexport type TypesMovieType = 'movie' | 'series' | 'episode'\n\nconst genType = (type?: TypesMovieType) => type ? `&type=${type}` : '';\nconst genPage = (page?: number) => {\n    if (page && (page < 0 || page > 100)) return ''\n    return page ? `&page=${page}` : ''\n};\n\nexport class OmdbHttp {\n    private static instance: OmdbHttp\n\n    private constructor() {\n    }\n\n    public static getInstance(): OmdbHttp {\n        if (!OmdbHttp.instance) {\n            OmdbHttp.instance = new OmdbHttp()\n        }\n        return OmdbHttp.instance\n    }\n\n    async getMoviesBySearch(search: string, type?: TypesMovieType, page?: number): Promise<MoviesSearched> {\n        const movies: MoviesSearched = await Http.get(`?s=${search}${genType(type)}${genPage(page)}`)\n        return movies\n    }\n\n    async getMoviesById(id: string): Promise<MoviesSearched> {\n        const movies: MoviesSearched = await Http.get(`?i=${id}`)\n        return movies\n    }\n\n}\n","import React, {FunctionComponent} from 'react';\nimport {Box, Card, CardContent, CardMedia, makeStyles, Typography, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport {MovieSearched} from \"../models/MovieSearched\";\nimport {useHistory} from 'react-router-dom'\n\ninterface OwnProps {\n    movie: MovieSearched\n}\n\ntype Props = OwnProps;\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        minHeight: theme.spacing(30),\n        cursor: 'pointer'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%'\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: 300,\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n}))\nconst MovieItem: FunctionComponent<Props> = ({movie}) => {\n    const classes = useStyles()\n    const theme = useTheme()\n    const isLg = useMediaQuery(theme.breakpoints.up('lg'))\n    const history = useHistory()\n    const handleClick = () => {\n        history.push(`/movie/${movie.imdbID}`)\n    }\n\n    return (\n        <Box p={1} mt={3}>\n            <Card className={classes.root} onClick={handleClick}>\n                {!isLg && <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h5\" variant=\"h5\">\n                            {movie.Title}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            {movie.Year}\n                        </Typography>\n                    </CardContent>\n\n                </div>}\n                <CardMedia\n                    className={classes.cover}\n                    image={movie.Poster}\n                    title={movie.Title}\n                />\n\n            </Card>\n        </Box>\n    );\n};\n\nexport default MovieItem;\n","import React, {ChangeEvent, FunctionComponent, useEffect, useState} from 'react';\nimport {Box, Grid, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport {EnumMovieType, OmdbHttp} from \"../http/Omdb.http\";\nimport {MovieSearched} from \"../models/MovieSearched\";\nimport MovieItem from \"../components/MovieItem\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst useStyles = makeStyles(theme => ({\n    textInput: {\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.primary.contrastText,\n    },\n\n}))\n\n\nconst HomePage: FunctionComponent<Props> = (props) => {\n    const classes = useStyles()\n    const [movies, setMovie] = useState<MovieSearched[]>([])\n    const [search, setSearch] = useState('avengers')\n\n    const omdbHttp = OmdbHttp.getInstance()\n\n    const handleMovies = async () => {\n        const movies = await omdbHttp.getMoviesBySearch(search, EnumMovieType.movie)\n        setMovie(movies.Search)\n    }\n    const handleChange = (e: ChangeEvent<any>) => setSearch(e.target.value)\n\n    useEffect(() => {\n        handleMovies()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    useEffect(() => {\n        handleMovies()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [search])\n\n    return (\n        <Grid container>\n            <Grid item xs={12}>\n                <Box p={3}>\n                    <Typography variant=\"h2\">\n                        Movies\n                    </Typography>\n\n                </Box>\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth value={search} onChange={handleChange}\n                           className={classes.textInput}\n                           label=\"Search\" variant=\"filled\"/>\n            </Grid>\n            {\n                movies && movies.map(movie => (\n                    <Grid item xs={12} sm={6} md={4} lg={2}>\n                        <MovieItem movie={movie}/>\n                    </Grid>\n\n                ))\n            }\n        </Grid>\n    );\n};\n\nexport default HomePage;\n","import React, {ChangeEvent, FunctionComponent, useEffect, useState} from 'react';\nimport {Box, Grid, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport {EnumMovieType, OmdbHttp} from \"../http/Omdb.http\";\nimport {MovieSearched} from \"../models/MovieSearched\";\nimport MovieItem from \"../components/MovieItem\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst useStyles = makeStyles(theme => ({\n    textInput: {\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.primary.contrastText,\n    },\n\n}))\n\n\nconst SeriesPage: FunctionComponent<Props> = (props) => {\n    const classes = useStyles()\n    const [movies, setMovie] = useState<MovieSearched[]>([])\n    const [search, setSearch] = useState('avengers')\n\n    const omdbHttp = OmdbHttp.getInstance()\n\n    const handleMovies = async () => {\n        const movies = await omdbHttp.getMoviesBySearch(search, EnumMovieType.series)\n        setMovie(movies.Search)\n    }\n    const handleChange = (e: ChangeEvent<any>) => setSearch(e.target.value)\n\n    useEffect(() => {\n        handleMovies()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    useEffect(() => {\n        handleMovies()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [search])\n\n    return (\n        <Grid container>\n            <Grid item xs={12}>\n                <Box p={3}>\n                    <Typography variant=\"h2\">\n                        Series\n                    </Typography>\n\n                </Box>\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth value={search} onChange={handleChange}\n                           className={classes.textInput}\n                           label=\"Search\" variant=\"filled\"/>\n            </Grid>\n            {\n                movies && movies.map(movie => (\n                    <Grid item xs={12} sm={6} md={4} lg={2}>\n                        <MovieItem movie={movie}/>\n                    </Grid>\n\n                ))\n            }\n        </Grid>\n    );\n};\n\nexport default SeriesPage;\n\n","import React, {FunctionComponent} from 'react';\nimport {Movie} from \"../models/Movie\";\nimport {Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport {Rating} from \"@material-ui/lab\";\n\n\ninterface OwnProps {\n    movie: Movie\n}\n\ntype Props = OwnProps;\nconst useStyles = makeStyles(theme => ({\n\n    subContainerInfo: {\n        width: '100%'\n    },\n    imgPoster: {\n        minHeight: '70vh',\n        objectFit: 'cover'\n    },\n    containerImg: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        minHeight: '90vh',\n\n    },\n    containerInfo: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        padding: theme.spacing(3)\n    }\n}))\nconst MovieDetails: FunctionComponent<Props> = ({movie}) => {\n    const classes = useStyles()\n    return (\n        <Grid container>\n            <Grid item xs={12} md={5} className={classes.containerImg}>\n                <img className={classes.imgPoster} src={movie.Poster} alt=\"\"/>\n            </Grid>\n            <Grid item xs={12} md={7} className={classes.containerInfo}>\n                <div className={classes.subContainerInfo}>\n                    <Typography variant=\"h2\">{movie.Title} </Typography>\n                    <Typography align=\"justify\" variant=\"h4\">Rating: {movie.imdbRating}  </Typography> <Rating\n                    name=\"read-only\" max={10 / 2} value={parseInt(movie?.imdbRating as string) / 2} readOnly/>\n                    <Typography variant=\"h6\">Language: {movie.Language} </Typography>\n                    <Typography variant=\"h6\">Actors: {movie.Actors} </Typography>\n                    <Typography variant=\"h6\">BoxOffice: {movie.BoxOffice} </Typography>\n                    <Typography variant=\"h6\">Released: {movie.Released} </Typography>\n                    <Typography variant=\"h6\">Production: {movie.Production} </Typography>\n                    <Typography variant=\"h6\">Plot: <br/> {movie.Plot} </Typography>\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default MovieDetails;\n\n","import React, {FunctionComponent, useEffect, useState} from 'react';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {OmdbHttp} from \"../http/Omdb.http\";\nimport {Movie} from \"../models/Movie\";\nimport {makeStyles, Paper} from \"@material-ui/core\";\nimport MovieDetails from \"../components/MovieDetails\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minHeight: '90vh',\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText\n    },\n\n}))\n\nconst MoviePage: FunctionComponent<Props> = (props) => {\n    const omdbHttp = OmdbHttp.getInstance()\n    const classes = useStyles()\n    const [movie, setMovie] = useState<Movie>({})\n    const params: any = useParams()\n    const history = useHistory()\n    const handleMovie = async () => {\n        if (!params.id) {\n            history.push('/')\n        }\n        const movieWanted = await omdbHttp.getMoviesById(params.id)\n        console.log(movieWanted)\n        setMovie(movieWanted)\n    }\n    useEffect(() => {\n        handleMovie()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    return (\n        <Paper className={classes.root}>\n            <MovieDetails movie={movie}/>\n        </Paper>\n    );\n};\n\nexport default MoviePage;\n","import React, {ChangeEvent, FunctionComponent, useEffect, useState} from 'react';\nimport {Grid, makeStyles, TextField} from \"@material-ui/core\";\nimport {EnumMovieType, OmdbHttp} from \"../http/Omdb.http\";\nimport {MovieSearched} from \"../models/MovieSearched\";\nimport MovieItem from \"../components/MovieItem\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst useStyles = makeStyles(theme => ({\n    textInput: {\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.primary.contrastText,\n    },\n\n}))\n\n\nconst EpisodesPage: FunctionComponent<Props> = (props) => {\n    const classes = useStyles()\n    const [movies, setMovie] = useState<MovieSearched[]>([])\n    const [search, setSearch] = useState('avengers')\n\n    const omdbHttp = OmdbHttp.getInstance()\n\n    const handleMovies = async () => {\n        const movies = await omdbHttp.getMoviesBySearch(search, EnumMovieType.series)\n        setMovie(movies.Search)\n    }\n    const handleChange = (e: ChangeEvent<any>) => setSearch(e.target.value)\n\n    useEffect(() => {\n        handleMovies()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    useEffect(() => {\n        handleMovies()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [search])\n\n    return (\n        <Grid container>\n            <Grid item xs={12}>\n                <TextField fullWidth value={search} onChange={handleChange}\n                           className={classes.textInput}\n                           label=\"Search\" variant=\"filled\"/>\n            </Grid>\n            {\n                movies && movies.map(movie => (\n                    <Grid item xs={12} sm={6} md={4} lg={2}>\n                        <MovieItem movie={movie}/>\n                    </Grid>\n\n                ))\n            }\n        </Grid>\n    );\n};\n\nexport default EpisodesPage;\n","import {IRoute} from \"../models/IRoute\";\nimport HomePage from \"../pages/HomePage\";\nimport SeriesPage from \"../pages/SeriesPage\";\nimport MoviePage from \"../pages/MoviePage\";\nimport EpisodesPage from \"../pages/EpisodesPage\";\n\nexport default [\n    {\n        component: HomePage,\n        name: 'home',\n        path: '/',\n        exact: true\n    }, {\n        component: MoviePage,\n        name: 'movie-id',\n        path: '/movie/:id',\n        exact: true\n    }, {\n        component: SeriesPage,\n        name: 'series',\n        path: '/series',\n        exact: true\n    }, {\n        component: EpisodesPage,\n        name: 'episodes',\n        path: '/episodes',\n        exact: true\n    }\n] as IRoute[]\n","import {Route} from 'react-router-dom'\nimport React, { FunctionComponent } from 'react';\nimport {IRoute} from \"../models/IRoute\";\n\ninterface OwnProps extends IRoute{}\n\ntype Props = OwnProps;\n\nconst SubRoute: FunctionComponent<Props> = (route) => {\n  return (\n      <Route\n          path={route.path}\n          render={(props => (\n              <route.component {...props} routes={route.routes}/>\n          ))}\n      />\n  );\n};\n\nexport default SubRoute;\n","import {makeStyles, Typography} from \"@material-ui/core\";\nimport {FunctionComponent} from \"react\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\nconst useStyles = makeStyles(theme => ({\n    footer: {\n        position: 'sticky',\n        bottom: 0,\n        left: 0,\n        padding: theme.spacing(0.5),\n        backgroundColor: theme.palette.primary.main\n    }\n}))\nconst FooterApp: FunctionComponent<Props> = (props) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.footer}>\n            <Typography variant=\"h6\">power by - Morales Reyes Miguel Angel</Typography>\n        </div>\n    );\n};\n\nexport default FooterApp;\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, NavLink, Switch} from \"react-router-dom\";\nimport routes from \"./routes/routes\";\nimport SubRoute from \"./routes/SubRoute\";\nimport {Box, Container, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport FooterApp from \"./components/FooterApp\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        margin: 0,\n        padding: 0,\n        minHeight: '100vh',\n        width: '100%'\n    },\n    bar: {\n        padding: theme.spacing(3)\n    },\n    itemLink: {\n        textDecoration: 'none',\n    },\n    active: {\n        color: theme.palette.primary.contrastText,\n    }\n}))\n\nfunction App() {\n    const classes = useStyles()\n    return (\n        <Box className={classes.root}>\n            <Container>\n                <BrowserRouter>\n                    <Grid container className={classes.bar}>\n                        <Grid item xs={12} md={6}>\n                            <Typography variant=\"h6\">\n                                Movies app\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={4} md={2}>\n                            <Typography component={NavLink} exact={true} className={classes.itemLink}\n                                        activeClassName={classes.active} to=\"/\" noWrap\n                                        color=\"secondary\"\n                                        variant=\"h5\">\n                                Movies\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={4} md={2}>\n                            <Typography component={NavLink} exact={true} className={classes.itemLink}\n                                        activeClassName={classes.active} to=\"/series\"\n                                        color=\"secondary\" variant=\"h5\">\n                                Series\n                            </Typography>\n                        </Grid>\n\n                    </Grid>\n                    <Switch>\n                        {routes.map((route, i) => <SubRoute key={i} {...route}/>)}\n\n                    </Switch>\n                </BrowserRouter>\n                <FooterApp/>\n\n            </Container>\n        </Box>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {FunctionComponent} from 'react';\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst Theme: FunctionComponent<Props> = ({children}) => {\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: '#151515',\n                light: '#151515',\n                dark: '#151515',\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: \"#f7a440\",\n                light: \"#f7a440\",\n                dark: \"#f7a440\",\n                contrastText: '#fff'\n            }\n        }\n    });\n    return (\n        <ThemeProvider theme={theme}>\n            {children}\n        </ThemeProvider>\n    );\n};\n\nexport default Theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Theme from \"./components/Theme\";\n\nReactDOM.render(\n    <Theme>\n        <App/>\n\n    </Theme>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}